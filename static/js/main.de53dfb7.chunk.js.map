{"version":3,"sources":["Components/Main.js","Components/User.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","className","style","margin","border","padding","textAlign","height","width","htmlFor","color","background","onClick","decCounter","type","onChange","setCounter","placeholder","num","incCounter","User","number","App","useState","setNum","data","setData","setPost","useEffect","fetch","then","resp","json","body","method","JSON","stringify","202010030","maxlimit","undefined","alert","val","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAEe,SAASA,EAAKC,GA4B3B,OACE,qCACE,qBAAKC,UAAU,YAAf,SACE,iDAEF,+BACE,sBAAKC,MAjCC,CACVC,OAAQ,OACRC,OAAQ,mBACRC,QAAS,OACTC,UAAW,SACXC,OAAQ,OACRC,MAAO,OA2BH,UACE,uBAAOC,QAAQ,QAAf,kCACA,uBAEA,wBAAQP,MA7BA,CACdQ,MAAO,MACPC,WAAY,OACZL,UAAW,SACXD,QAAS,YAyBqBO,QAAS,WAC/BZ,EAAMa,cADR,eAMA,uBACEC,KAAK,SACLZ,MAxBM,CACdM,MAAO,MACPF,UAAW,SACXC,OAAQ,IAsBAQ,SAAUf,EAAMgB,WAChBC,YAAajB,EAAMkB,MAGrB,wBAAQhB,MApCA,CACdQ,MAAO,MACPJ,UAAW,SACXD,QAAS,WACTM,WAAY,OACZR,OAAQ,WA+BsBS,QAASZ,EAAMmB,WAAvC,uBCnDK,SAASC,EAAKpB,GAU3B,OACE,mCACE,iCACE,sBAAKE,MAZC,CACVC,OAAQ,OACRC,OAAQ,mBACRC,QAAS,OACTC,UAAW,OACXC,OAAQ,MACRC,MAAO,OAMH,UACE,+CAEA,gCAAQR,EAAMqB,gBCwDTC,MArEf,WAAgB,IAAD,EACSC,mBAAS,GADlB,mBACNL,EADM,KACDM,EADC,OAEWD,mBAAS,KAFpB,mBAENE,EAFM,KAEAC,EAFA,OAIWH,qBAJX,mBAIAI,GAJA,WAKbC,qBAAU,WAGRC,MADE,gFAECC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLN,EAAQF,QAGX,IACHI,MAAM,qEAAsE,CAC1EK,OAAQ,MACRD,KAAME,KAAKC,UAAU,CAAEC,UAAWZ,MAEjCK,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,OAST,IAAIK,EAAWb,EA0Bf,OACE,qCACE,cAAC1B,EAAD,CACEoB,WA5Ba,WACA,OAAbmB,QAAkCC,IAAbD,IACvBA,EAAW,KAGTpB,GAAOoB,GACTE,MAAM,yBACNhB,EAAO,IAGPA,EAAON,EAAM,IAmBXL,WAhBa,WAEL,IAARK,EACFsB,MAAM,uCAGNhB,EAAON,EAAM,IAWXF,WApCN,SAAoByB,GAClBf,EAAQe,EAAIC,OAAOC,QAoCfzB,IAAKA,IAEP,uBACA,cAACE,EAAD,CAAMC,OAAQiB,QCzDLM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.de53dfb7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Main(props) {\r\n  let extra = {\r\n    margin: \"auto\",\r\n    border: \"dotted 1px black\",\r\n    padding: \"40px\",\r\n    textAlign: \"center\",\r\n    height: \"100%\",\r\n    width: \"20%\",\r\n  };\r\n  const button1 = {\r\n    color: \"red\",\r\n    background: \"grey\",\r\n    textAlign: \"center\",\r\n    padding: \"7px 15px\",\r\n  };\r\n  const button2 = {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n    padding: \"7px 15px\",\r\n    background: \"pink\",\r\n    margin: \"5px 0px\",\r\n  };\r\n  const textbox = {\r\n    width: \"15%\",\r\n    textAlign: \"center\",\r\n    height: 26,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>FrontEnd Task</h1>\r\n      </div>\r\n      <body>\r\n        <div style={extra}>\r\n          <label htmlFor=\"label\">Saving Counter Value</label>\r\n          <br />\r\n\r\n          <button style={button1} onClick={() => {\r\n            props.decCounter()\r\n            }}>\r\n            -\r\n          </button>\r\n\r\n          <input\r\n            type=\"Number\"\r\n            style={textbox}\r\n            onChange={props.setCounter}\r\n            placeholder={props.num}\r\n          />\r\n\r\n          <button style={button2} onClick={props.incCounter}>\r\n            +\r\n          </button>\r\n        </div>\r\n      </body>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function User(props) {\r\n  let extra = {\r\n    margin: \"auto\",\r\n    border: \"dotted 1px black\",\r\n    padding: \"30px\",\r\n    textAlign: \"left\",\r\n    height: \"10%\",\r\n    width: \"20%\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <center>\r\n        <div style={extra}>\r\n          <h2>Counter Value</h2>\r\n\r\n          <label>{props.number}</label>\r\n        </div>\r\n      </center>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Main from \"./Components/Main\";\nimport User from \"./Components/User\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [num, setNum] = useState(1);\n  const [data, setData] = useState(1000);\n\n  const [post, setPost] = useState();\n  useEffect(() => {\n    const url =\n      \"https://interview-8e4c5-default-rtdb.firebaseio.com/front-end/202010030.json\";\n    fetch(url)\n      .then((resp) => resp.json())\n      .then((body) => {\n        setPost(data);\n        \n      });\n  }, []);\n  fetch(\"https://interview-8e4c5-default-rtdb.firebaseio.com/front-end.json\", {\n    method: \"PUT\",\n    body: JSON.stringify({ 202010030: data }),\n  })\n    .then((resp) => resp.json())\n    .then((body) => {\n      \n    });\n\n  function setCounter(val) {\n    setData(val.target.value);\n   \n  }\n  \n  let maxlimit = data;\n  const incCounter = () => {\n    if (maxlimit === null || maxlimit === undefined) {\n      maxlimit = 1000;\n    }\n    \n    if (num == maxlimit) {\n      alert(\"Highest value reached\");\n      setNum(1);\n    } else {\n      \n      setNum(num + 1);\n    }\n  };\n  const decCounter = () => {\n    \n    if (num === 0) {\n      alert(\"Counter Value Cannot be less then 0\");\n    } else {\n      \n      setNum(num - 1);\n      \n    }\n  };\n\n  \n  return (\n    <>\n      <Main\n        incCounter={incCounter}\n        decCounter={decCounter}\n        setCounter={setCounter}\n        num={num}\n      />\n      <br />\n      <User number={maxlimit} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}